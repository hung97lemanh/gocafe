import AdminLayout from "../../components/AdminLayout";
import { useState } from "react";

export default function OrdersPage() {
    const [filterValue, setFilterValue] = useState("all");

    // Mock order data - in a real app this would come from an API
    const orders = [
        {
            id: "#DH00123",
            table: "B√†n 04",
            customer: "H∆∞ng",
            status: "pending",
            statusText: "Ch·ªù thanh to√°n",
            items: ["Tr√† ƒê√†o x2 (√≠t ƒë∆∞·ªùng)", "C√† Ph√™ S·ªØa x1 (nhi·ªÅu ƒë√°)"],
            total: "115.000ƒë"
        },
        {
            id: "#DH00124",
            table: "B√†n 02",
            customer: "Kh√°nh",
            status: "paid",
            statusText: "ƒê√£ thanh to√°n",
            items: ["C√† Ph√™ ƒêen x1", "B√°nh M√¨ x1"],
            total: "60.000ƒë"
        },
        {
            id: "#DH00125",
            table: "B√†n 06",
            customer: "Lan",
            status: "done",
            statusText: "Ho√†n th√†nh",
            items: ["Tr√† S·ªØa x2"],
            total: "80.000ƒë",
            paymentMethod: "Chuy·ªÉn kho·∫£n"
        }
    ];

    // Stats data
    const stats = [
        { number: 8, label: "ƒê∆°n ch·ªù" },
        { number: 12, label: "ƒê√£ thanh to√°n" },
        { number: 25, label: "Ho√†n th√†nh" },
        { number: "1.2M", label: "Doanh thu" }
    ];

    const handleOrderAction = (orderId: any, action: any) => {
        alert(`Th·ª±c hi·ªán ${action} cho ƒë∆°n h√†ng ${orderId}`);
        // In a real app, you would call an API here
    };

    const getStatusClass = (status: any) => {
        switch (status) {
            case "pending":
                return "bg-amber-100 text-amber-800";
            case "paid":
                return "bg-green-100 text-green-800";
            case "done":
                return "bg-blue-100 text-blue-800";
            default:
                return "bg-gray-100 text-gray-800";
        }
    };

    return (
        <AdminLayout>
            <div className="pb-20">
                <div className="flex justify-between items-center bg-gradient-to-r from-amber-700 to-amber-500 text-white p-4 rounded-lg shadow">
                    <h1 className="text-xl font-bold">üè™ Qu·∫£n l√Ω ƒë∆°n h√†ng</h1>
                    {/* <button
                        onClick={() => setIsAddModalOpen(true)}
                        className="bg-white/20 hover:bg-white/30 px-4 py-2 rounded-full text-sm font-medium transition"
                    >
                        + Th√™m m√≥n
                    </button> */}
                </div>

                {/* Statistics */}
                <div className="grid grid-cols-2 md:grid-cols-4 gap-3 mb-5">
                    {stats.map((stat, index) => (
                        <div key={index} className="bg-white p-4 rounded-lg shadow text-center">
                            <div className="text-xl font-bold text-orange-700">{stat.number}</div>
                            <div className="text-sm text-gray-600">{stat.label}</div>
                        </div>
                    ))}
                </div>

                {/* Search and Filter */}
                <div className="bg-white p-4 rounded-lg shadow mb-4">
                    <div className="flex flex-col md:flex-row gap-2">
                        <input
                            type="text"
                            className="flex-1 p-2 border border-gray-300 rounded-lg text-sm"
                            placeholder="üîç T√¨m m√£ ƒë∆°n, t√™n kh√°ch..."
                        />
                        <select
                            className="p-2 border border-gray-300 rounded-lg text-sm min-w-[120px]"
                            value={filterValue}
                            onChange={(e) => setFilterValue(e.target.value)}
                        >
                            <option value="all">T·∫•t c·∫£</option>
                            <option value="pending">Ch·ªù pha</option>
                            <option value="paid">ƒê√£ thanh to√°n</option>
                            <option value="done">Ho√†n th√†nh</option>
                        </select>
                    </div>
                </div>

                {/* Order Items */}
                <div className="flex flex-col gap-3">
                    {orders.map((order) => (
                        <div key={order.id} className="bg-white rounded-xl p-4 shadow border-l-4 border-orange-600">
                            <div className="flex justify-between items-start mb-2">
                                <div>
                                    <div className="text-lg font-bold text-orange-600">{order.id}</div>
                                    <div className="text-sm text-gray-600">
                                        {order.table} ‚Ä¢ {order.customer}
                                    </div>
                                </div>
                                <span className={`px-2 py-1 rounded-full text-xs font-bold ${getStatusClass(order.status)}`}>{order.statusText}</span>
                            </div>

                            {/* Order Details */}
                            <div className="bg-gray-50 rounded-lg p-3 mb-3 border border-gray-200">
                                <h4 className="text-orange-600 font-medium mb-1 text-sm">Chi ti·∫øt ƒë∆°n h√†ng:</h4>
                                <ul className="text-sm text-gray-600">
                                    {order.items.map((item, index) => (
                                        <li key={index}>‚Ä¢ {item}</li>
                                    ))}
                                    <li>
                                        ‚Ä¢ T·ªïng: {order.total} {order.paymentMethod && `‚Ä¢ ${order.paymentMethod}`}
                                    </li>
                                </ul>
                            </div>

                            {/* Order Actions */}
                            <div className="flex flex-wrap gap-2">
                                {order.status === "pending" && (
                                    <>
                                        <button
                                            className="px-3 py-1.5 bg-green-600 text-white rounded-md text-xs font-medium"
                                            onClick={() => handleOrderAction(order.id, "ƒë√£ pha")}
                                        >
                                            ‚úÖ ƒê√£ pha
                                        </button>
                                        <button
                                            className="px-3 py-1.5 bg-blue-600 text-white rounded-md text-xs font-medium"
                                            onClick={() => handleOrderAction(order.id, "thanh to√°n")}
                                        >
                                            üí≥ ƒê√£ thanh to√°n
                                        </button>
                                        <button
                                            className="px-3 py-1.5 bg-red-600 text-white rounded-md text-xs font-medium"
                                            onClick={() => handleOrderAction(order.id, "h·ªßy")}
                                        >
                                            ‚ùå H·ªßy
                                        </button>
                                    </>
                                )}

                                {order.status === "paid" && (
                                    <button
                                        className="px-3 py-1.5 bg-green-600 text-white rounded-md text-xs font-medium"
                                        onClick={() => handleOrderAction(order.id, "ho√†n th√†nh")}
                                    >
                                        üéâ Ho√†n th√†nh
                                    </button>
                                )}
                            </div>
                        </div>
                    ))}
                </div>
            </div>
        </AdminLayout>
    );
}
